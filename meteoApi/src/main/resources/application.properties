server.port=9999

spring.application.name=meteo-api

spring.datasource.url=jdbc:h2:mem:testdb
spring.jpa.hibernate.ddl-auto=create-drop

#spring.datasource.url=jdbc:h2:file:./db-task7;DB_CLOSE_ON_EXIT=FALSE
#spring.jpa.hibernate.ddl-auto=create-drop

app.help.message = <h2>USAGE:</h2><p>/user/login - do a login with provided userName and passwd parameters

springdoc.api-docs.path=/meteoapi-docs
springdoc.swagger-ui.path=/meteoapi-docs-ui

management.endpoints.web.exposure.include=health,prometheus,env
management.metrics.export.prometheus.enabled = true
management.endpoint.health.show-details=always

management.tracing.enabled=true
management.tracing.sampling.probability=1
management.zipkin.tracing.endpoint =  http://zipkin:9411/api/v2/spans

##Resilience4j for fault tolerance
management.health.circuitbreakers.enabled=true
management.health.ratelimiters.enabled=true  



resilience4j.ratelimiter.metrics.enabled=true
resilience4j.timelimiter.metrics.enabled=true

resilience4j.timelimiter.instances.COMMON-TIME-LIMITER.timeout-duration=2s
resilience4j.timelimiter.instances.COMMON-TIME-LIMITER.cancel-running-future=true

resilience4j.ratelimiter.instances.COMMON-RPM.register-health-indicator=true
resilience4j.ratelimiter.instances.COMMON-RPM.limit-for-period=20
resilience4j.ratelimiter.instances.COMMON-RPM.limit-refresh-period=60s
resilience4j.ratelimiter.instances.COMMON-RPM.timeout-duration=0s
resilience4j.ratelimiter.instances.COMMON-RPM.allow-health-indicator-to-fail=true
resilience4j.ratelimiter.instances.COMMON-RPM.subscribe-for-events=true
resilience4j.ratelimiter.instances.COMMON-RPM.event-consumer-buffer-size=50

