/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package otus.moryakovdv.meteoapi.web;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-10-21T20:43:10.963067927+03:00[Europe/Moscow]", comments = "Generator version: 7.8.0")
@Validated
@Tag(name = "StakeholderController", description = "the StakeholderController API")
public interface StakeholderApi {

    default StakeholderApiDelegate getDelegate() {
        return new StakeholderApiDelegate() {};
    }

    /**
     * POST /stakeholder
     *
     * @return Все ОК (status code 200)
     *         or Неверные параметры (status code 400)
     *         or Что-то пошло не так (status code 500)
     */
    @Operation(
        operationId = "createStakeholder",
        tags = { "StakeholderController" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Все ОК"),
            @ApiResponse(responseCode = "400", description = "Неверные параметры"),
            @ApiResponse(responseCode = "500", description = "Что-то пошло не так")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/stakeholder"
    )
    
    default ResponseEntity<Void> createStakeholder(
        
    ) {
        return getDelegate().createStakeholder();
    }


    /**
     * DELETE /stakeholder/{stakeholderId} : Удалить конкретного stakehlder-а
     *
     * @param stakeholderId ID stakeholderId (required)
     * @return It works! (status code 200)
     *         or Что-то пошло не так (status code 500)
     */
    @Operation(
        operationId = "deleteStakeholderById",
        summary = "Удалить конкретного stakehlder-а",
        tags = { "StakeholderController" },
        responses = {
            @ApiResponse(responseCode = "200", description = "It works!"),
            @ApiResponse(responseCode = "500", description = "Что-то пошло не так")
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/stakeholder/{stakeholderId}"
    )
    
    default ResponseEntity<Void> deleteStakeholderById(
        @Parameter(name = "stakeholderId", description = "ID stakeholderId", required = true, in = ParameterIn.PATH) @PathVariable("stakeholderId") Integer stakeholderId
    ) {
        return getDelegate().deleteStakeholderById(stakeholderId);
    }


    /**
     * GET /stakeholder/{stakeholderId} : Загрузить конкретного stakehlder-а
     *
     * @param stakeholderId ID stakeholderId (required)
     * @return It works! (status code 200)
     *         or Что-то пошло не так (status code 500)
     */
    @Operation(
        operationId = "loadStakeholderById",
        summary = "Загрузить конкретного stakehlder-а",
        tags = { "StakeholderController" },
        responses = {
            @ApiResponse(responseCode = "200", description = "It works!"),
            @ApiResponse(responseCode = "500", description = "Что-то пошло не так")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/stakeholder/{stakeholderId}"
    )
    
    default ResponseEntity<Void> loadStakeholderById(
        @Parameter(name = "stakeholderId", description = "ID stakeholderId", required = true, in = ParameterIn.PATH) @PathVariable("stakeholderId") Integer stakeholderId
    ) {
        return getDelegate().loadStakeholderById(stakeholderId);
    }


    /**
     * GET /stakeholder : Выгрузить всех stakeholder-ов
     *
     * @return It works! (status code 200)
     *         or Что-то пошло не так (status code 500)
     */
    @Operation(
        operationId = "stakeholderGet",
        summary = "Выгрузить всех stakeholder-ов",
        tags = { "StakeholderController" },
        responses = {
            @ApiResponse(responseCode = "200", description = "It works!"),
            @ApiResponse(responseCode = "500", description = "Что-то пошло не так")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/stakeholder"
    )
    
    default ResponseEntity<Void> stakeholderGet(
        
    ) {
        return getDelegate().stakeholderGet();
    }

}
