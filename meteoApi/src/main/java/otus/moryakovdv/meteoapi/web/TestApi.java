/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.8.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package otus.moryakovdv.meteoapi.web;

import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2024-10-21T20:43:10.963067927+03:00[Europe/Moscow]", comments = "Generator version: 7.8.0")
@Validated
@Tag(name = "TestController", description = "the TestController API")
public interface TestApi {

    default TestApiDelegate getDelegate() {
        return new TestApiDelegate() {};
    }

    /**
     * GET /test : Тестовый метод для контроля рботоспособности
     *
     * @return It works! (status code 200)
     *         or Что-то пошло не так (status code 500)
     */
    @Operation(
        operationId = "testGet",
        summary = "Тестовый метод для контроля рботоспособности",
        tags = { "TestController" },
        responses = {
            @ApiResponse(responseCode = "200", description = "It works!"),
            @ApiResponse(responseCode = "500", description = "Что-то пошло не так")
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/test"
    )
    
    default ResponseEntity<String> testGet(
        
    ) {
        return getDelegate().testGet();
    }
    
    
    
    @Operation(
            operationId = "testAlive",
            summary = "Проверка прохождения alive через RabbitMQ",
            tags = { "TestController" },
            responses = {
                @ApiResponse(responseCode = "200", description = "It works!"),
                @ApiResponse(responseCode = "500", description = "Что-то пошло не так")
            }
        )
    @RequestMapping(
            method = RequestMethod.GET,
            value = "/testAlive"
        )
        
    default ResponseEntity<String> testAlive(
            
        ) {
            return getDelegate().testAlive();
        }

}
