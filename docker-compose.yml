version: '3.1'
services:
  meteo-api:
    build:
      context: ./meteoApi
      dockerfile: Dockerfile

    hostname: meteoapi
    container_name: meteoapi

    restart: on-failure:1


    
##HOST_PORT:CONTAINER_PORT
    ports:
      - 8080:9999
      
    networks:
      - otus
    environment:
      AUTH: null
 

  zipkin:
    image: openzipkin/zipkin
    ports:
      - 9411:9411
    networks:
      -  otus

    hostname: zipkin

  prometheus:
    image: prom/prometheus
#    depends_on:
#      - meteo-api
    container_name: prometheus
    ports:
      - 9090:9090
    networks:
      - otus
    volumes:
      - ./monitoring/prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: on-failure:1
    hostname: prometheus

  grafana:
    image: grafana/grafana
#    depends_on:
#      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./monitoring/grafana/:/etc/grafana/provisioning/
    env_file:
      - ./monitoring/grafana/config.monitoring
    networks:
      - otus
    restart: on-failure:1
    hostname: grafana


####include gafana LOKI
  grafana-loki:
    image: grafana/loki
    ports:
      - 3100:3100    
    
    networks:
      - otus
    restart: on-failure:1
    hostname: loki

networks:
  otus:
    driver: bridge

   
networks:
  otus:
    driver: bridge
